24-05-19 00:05:04.524 - INFO:   name: ttest_VapSR_X2
  model: sr
  distortion: sr
  scale: 2
  crop_border: None
  gpu_ids: [0]
  network_G:[
    which_model_G: VapSR
    scale: 2
    num_in_ch: 3
    num_feat: 48
    d_atten: 64
    num_block: 20
    num_out_ch: 3
  ]
  datasets:[
    test1:[
      name: set5
      mode: LQGT_rcan
      dataroot_GT: /home/data/disk2/wsq/Datasets/benchmark/Set5/HR
      dataroot_LQ: /home/data/disk2/wsq/Datasets/benchmark/Set5/LR_bicubic/X2
      phase: test1
      scale: 2
      data_type: img
    ]
    test2:[
      name: class3
      mode: LQGT_rcan
      dataroot_GT: /home/data/disk2/wsq/Datasets/benchmark/Set14/HR
      dataroot_LQ: /home/data/disk2/wsq/Datasets/benchmark/Set14/LR_bicubic/X2
      phase: test2
      scale: 2
      data_type: img
    ]
  ]
  path:[
    pretrain_model_G: /home/data/disk3/zl/code/paddle/VapSR_paddle/trans_weights/trans_varsp.pdparams
    root: /home/data/disk3/zl/code/paddle/VapSR_paddle
    results_root: /home/data/disk3/zl/code/paddle/VapSR_paddle/results/ttest_VapSR_X2
    log: /home/data/disk3/zl/code/paddle/VapSR_paddle/results/ttest_VapSR_X2
  ]
  is_train: False

24-05-19 00:05:04.526 - INFO: Dataset [LQGTDataset_rcan - set5] is created.
24-05-19 00:05:04.527 - INFO: Number of test images in [set5]: 5
24-05-19 00:05:04.527 - INFO: Dataset [LQGTDataset_rcan - class3] is created.
24-05-19 00:05:04.527 - INFO: Number of test images in [class3]: 12
24-05-19 00:05:06.161 - INFO: Network G structure: vapsr, with parameters: 329,236
24-05-19 00:05:06.162 - INFO: vapsr(
  (conv_first): Conv2D(3, 48, kernel_size=[3, 3], padding=1, data_format=NCHW)
  (body): Sequential(
    (0): VAB(
      (proj_1): Conv2D(48, 64, kernel_size=[1, 1], data_format=NCHW)
      (activation): GELU(approximate=False)
      (atten_branch): Attention(
        (pointwise): Conv2D(64, 64, kernel_size=[1, 1], data_format=NCHW)
        (depthwise): Conv2D(64, 64, kernel_size=[5, 5], padding=2, groups=64, data_format=NCHW)
        (depthwise_dilated): Conv2D(64, 64, kernel_size=[5, 5], padding=6, dilation=[3, 3], groups=64, data_format=NCHW)
      )
      (proj_2): Conv2D(64, 48, kernel_size=[1, 1], data_format=NCHW)
      (pixel_norm): LayerNorm(normalized_shape=[48], epsilon=1e-05)
    )
    (1): VAB(
      (proj_1): Conv2D(48, 64, kernel_size=[1, 1], data_format=NCHW)
      (activation): GELU(approximate=False)
      (atten_branch): Attention(
        (pointwise): Conv2D(64, 64, kernel_size=[1, 1], data_format=NCHW)
        (depthwise): Conv2D(64, 64, kernel_size=[5, 5], padding=2, groups=64, data_format=NCHW)
        (depthwise_dilated): Conv2D(64, 64, kernel_size=[5, 5], padding=6, dilation=[3, 3], groups=64, data_format=NCHW)
      )
      (proj_2): Conv2D(64, 48, kernel_size=[1, 1], data_format=NCHW)
      (pixel_norm): LayerNorm(normalized_shape=[48], epsilon=1e-05)
    )
    (2): VAB(
      (proj_1): Conv2D(48, 64, kernel_size=[1, 1], data_format=NCHW)
      (activation): GELU(approximate=False)
      (atten_branch): Attention(
        (pointwise): Conv2D(64, 64, kernel_size=[1, 1], data_format=NCHW)
        (depthwise): Conv2D(64, 64, kernel_size=[5, 5], padding=2, groups=64, data_format=NCHW)
        (depthwise_dilated): Conv2D(64, 64, kernel_size=[5, 5], padding=6, dilation=[3, 3], groups=64, data_format=NCHW)
      )
      (proj_2): Conv2D(64, 48, kernel_size=[1, 1], data_format=NCHW)
      (pixel_norm): LayerNorm(normalized_shape=[48], epsilon=1e-05)
    )
    (3): VAB(
      (proj_1): Conv2D(48, 64, kernel_size=[1, 1], data_format=NCHW)
      (activation): GELU(approximate=False)
      (atten_branch): Attention(
        (pointwise): Conv2D(64, 64, kernel_size=[1, 1], data_format=NCHW)
        (depthwise): Conv2D(64, 64, kernel_size=[5, 5], padding=2, groups=64, data_format=NCHW)
        (depthwise_dilated): Conv2D(64, 64, kernel_size=[5, 5], padding=6, dilation=[3, 3], groups=64, data_format=NCHW)
      )
      (proj_2): Conv2D(64, 48, kernel_size=[1, 1], data_format=NCHW)
      (pixel_norm): LayerNorm(normalized_shape=[48], epsilon=1e-05)
    )
    (4): VAB(
      (proj_1): Conv2D(48, 64, kernel_size=[1, 1], data_format=NCHW)
      (activation): GELU(approximate=False)
      (atten_branch): Attention(
        (pointwise): Conv2D(64, 64, kernel_size=[1, 1], data_format=NCHW)
        (depthwise): Conv2D(64, 64, kernel_size=[5, 5], padding=2, groups=64, data_format=NCHW)
        (depthwise_dilated): Conv2D(64, 64, kernel_size=[5, 5], padding=6, dilation=[3, 3], groups=64, data_format=NCHW)
      )
      (proj_2): Conv2D(64, 48, kernel_size=[1, 1], data_format=NCHW)
      (pixel_norm): LayerNorm(normalized_shape=[48], epsilon=1e-05)
    )
    (5): VAB(
      (proj_1): Conv2D(48, 64, kernel_size=[1, 1], data_format=NCHW)
      (activation): GELU(approximate=False)
      (atten_branch): Attention(
        (pointwise): Conv2D(64, 64, kernel_size=[1, 1], data_format=NCHW)
        (depthwise): Conv2D(64, 64, kernel_size=[5, 5], padding=2, groups=64, data_format=NCHW)
        (depthwise_dilated): Conv2D(64, 64, kernel_size=[5, 5], padding=6, dilation=[3, 3], groups=64, data_format=NCHW)
      )
      (proj_2): Conv2D(64, 48, kernel_size=[1, 1], data_format=NCHW)
      (pixel_norm): LayerNorm(normalized_shape=[48], epsilon=1e-05)
    )
    (6): VAB(
      (proj_1): Conv2D(48, 64, kernel_size=[1, 1], data_format=NCHW)
      (activation): GELU(approximate=False)
      (atten_branch): Attention(
        (pointwise): Conv2D(64, 64, kernel_size=[1, 1], data_format=NCHW)
        (depthwise): Conv2D(64, 64, kernel_size=[5, 5], padding=2, groups=64, data_format=NCHW)
        (depthwise_dilated): Conv2D(64, 64, kernel_size=[5, 5], padding=6, dilation=[3, 3], groups=64, data_format=NCHW)
      )
      (proj_2): Conv2D(64, 48, kernel_size=[1, 1], data_format=NCHW)
      (pixel_norm): LayerNorm(normalized_shape=[48], epsilon=1e-05)
    )
    (7): VAB(
      (proj_1): Conv2D(48, 64, kernel_size=[1, 1], data_format=NCHW)
      (activation): GELU(approximate=False)
      (atten_branch): Attention(
        (pointwise): Conv2D(64, 64, kernel_size=[1, 1], data_format=NCHW)
        (depthwise): Conv2D(64, 64, kernel_size=[5, 5], padding=2, groups=64, data_format=NCHW)
        (depthwise_dilated): Conv2D(64, 64, kernel_size=[5, 5], padding=6, dilation=[3, 3], groups=64, data_format=NCHW)
      )
      (proj_2): Conv2D(64, 48, kernel_size=[1, 1], data_format=NCHW)
      (pixel_norm): LayerNorm(normalized_shape=[48], epsilon=1e-05)
    )
    (8): VAB(
      (proj_1): Conv2D(48, 64, kernel_size=[1, 1], data_format=NCHW)
      (activation): GELU(approximate=False)
      (atten_branch): Attention(
        (pointwise): Conv2D(64, 64, kernel_size=[1, 1], data_format=NCHW)
        (depthwise): Conv2D(64, 64, kernel_size=[5, 5], padding=2, groups=64, data_format=NCHW)
        (depthwise_dilated): Conv2D(64, 64, kernel_size=[5, 5], padding=6, dilation=[3, 3], groups=64, data_format=NCHW)
      )
      (proj_2): Conv2D(64, 48, kernel_size=[1, 1], data_format=NCHW)
      (pixel_norm): LayerNorm(normalized_shape=[48], epsilon=1e-05)
    )
    (9): VAB(
      (proj_1): Conv2D(48, 64, kernel_size=[1, 1], data_format=NCHW)
      (activation): GELU(approximate=False)
      (atten_branch): Attention(
        (pointwise): Conv2D(64, 64, kernel_size=[1, 1], data_format=NCHW)
        (depthwise): Conv2D(64, 64, kernel_size=[5, 5], padding=2, groups=64, data_format=NCHW)
        (depthwise_dilated): Conv2D(64, 64, kernel_size=[5, 5], padding=6, dilation=[3, 3], groups=64, data_format=NCHW)
      )
      (proj_2): Conv2D(64, 48, kernel_size=[1, 1], data_format=NCHW)
      (pixel_norm): LayerNorm(normalized_shape=[48], epsilon=1e-05)
    )
    (10): VAB(
      (proj_1): Conv2D(48, 64, kernel_size=[1, 1], data_format=NCHW)
      (activation): GELU(approximate=False)
      (atten_branch): Attention(
        (pointwise): Conv2D(64, 64, kernel_size=[1, 1], data_format=NCHW)
        (depthwise): Conv2D(64, 64, kernel_size=[5, 5], padding=2, groups=64, data_format=NCHW)
        (depthwise_dilated): Conv2D(64, 64, kernel_size=[5, 5], padding=6, dilation=[3, 3], groups=64, data_format=NCHW)
      )
      (proj_2): Conv2D(64, 48, kernel_size=[1, 1], data_format=NCHW)
      (pixel_norm): LayerNorm(normalized_shape=[48], epsilon=1e-05)
    )
    (11): VAB(
      (proj_1): Conv2D(48, 64, kernel_size=[1, 1], data_format=NCHW)
      (activation): GELU(approximate=False)
      (atten_branch): Attention(
        (pointwise): Conv2D(64, 64, kernel_size=[1, 1], data_format=NCHW)
        (depthwise): Conv2D(64, 64, kernel_size=[5, 5], padding=2, groups=64, data_format=NCHW)
        (depthwise_dilated): Conv2D(64, 64, kernel_size=[5, 5], padding=6, dilation=[3, 3], groups=64, data_format=NCHW)
      )
      (proj_2): Conv2D(64, 48, kernel_size=[1, 1], data_format=NCHW)
      (pixel_norm): LayerNorm(normalized_shape=[48], epsilon=1e-05)
    )
    (12): VAB(
      (proj_1): Conv2D(48, 64, kernel_size=[1, 1], data_format=NCHW)
      (activation): GELU(approximate=False)
      (atten_branch): Attention(
        (pointwise): Conv2D(64, 64, kernel_size=[1, 1], data_format=NCHW)
        (depthwise): Conv2D(64, 64, kernel_size=[5, 5], padding=2, groups=64, data_format=NCHW)
        (depthwise_dilated): Conv2D(64, 64, kernel_size=[5, 5], padding=6, dilation=[3, 3], groups=64, data_format=NCHW)
      )
      (proj_2): Conv2D(64, 48, kernel_size=[1, 1], data_format=NCHW)
      (pixel_norm): LayerNorm(normalized_shape=[48], epsilon=1e-05)
    )
    (13): VAB(
      (proj_1): Conv2D(48, 64, kernel_size=[1, 1], data_format=NCHW)
      (activation): GELU(approximate=False)
      (atten_branch): Attention(
        (pointwise): Conv2D(64, 64, kernel_size=[1, 1], data_format=NCHW)
        (depthwise): Conv2D(64, 64, kernel_size=[5, 5], padding=2, groups=64, data_format=NCHW)
        (depthwise_dilated): Conv2D(64, 64, kernel_size=[5, 5], padding=6, dilation=[3, 3], groups=64, data_format=NCHW)
      )
      (proj_2): Conv2D(64, 48, kernel_size=[1, 1], data_format=NCHW)
      (pixel_norm): LayerNorm(normalized_shape=[48], epsilon=1e-05)
    )
    (14): VAB(
      (proj_1): Conv2D(48, 64, kernel_size=[1, 1], data_format=NCHW)
      (activation): GELU(approximate=False)
      (atten_branch): Attention(
        (pointwise): Conv2D(64, 64, kernel_size=[1, 1], data_format=NCHW)
        (depthwise): Conv2D(64, 64, kernel_size=[5, 5], padding=2, groups=64, data_format=NCHW)
        (depthwise_dilated): Conv2D(64, 64, kernel_size=[5, 5], padding=6, dilation=[3, 3], groups=64, data_format=NCHW)
      )
      (proj_2): Conv2D(64, 48, kernel_size=[1, 1], data_format=NCHW)
      (pixel_norm): LayerNorm(normalized_shape=[48], epsilon=1e-05)
    )
    (15): VAB(
      (proj_1): Conv2D(48, 64, kernel_size=[1, 1], data_format=NCHW)
      (activation): GELU(approximate=False)
      (atten_branch): Attention(
        (pointwise): Conv2D(64, 64, kernel_size=[1, 1], data_format=NCHW)
        (depthwise): Conv2D(64, 64, kernel_size=[5, 5], padding=2, groups=64, data_format=NCHW)
        (depthwise_dilated): Conv2D(64, 64, kernel_size=[5, 5], padding=6, dilation=[3, 3], groups=64, data_format=NCHW)
      )
      (proj_2): Conv2D(64, 48, kernel_size=[1, 1], data_format=NCHW)
      (pixel_norm): LayerNorm(normalized_shape=[48], epsilon=1e-05)
    )
    (16): VAB(
      (proj_1): Conv2D(48, 64, kernel_size=[1, 1], data_format=NCHW)
      (activation): GELU(approximate=False)
      (atten_branch): Attention(
        (pointwise): Conv2D(64, 64, kernel_size=[1, 1], data_format=NCHW)
        (depthwise): Conv2D(64, 64, kernel_size=[5, 5], padding=2, groups=64, data_format=NCHW)
        (depthwise_dilated): Conv2D(64, 64, kernel_size=[5, 5], padding=6, dilation=[3, 3], groups=64, data_format=NCHW)
      )
      (proj_2): Conv2D(64, 48, kernel_size=[1, 1], data_format=NCHW)
      (pixel_norm): LayerNorm(normalized_shape=[48], epsilon=1e-05)
    )
    (17): VAB(
      (proj_1): Conv2D(48, 64, kernel_size=[1, 1], data_format=NCHW)
      (activation): GELU(approximate=False)
      (atten_branch): Attention(
        (pointwise): Conv2D(64, 64, kernel_size=[1, 1], data_format=NCHW)
        (depthwise): Conv2D(64, 64, kernel_size=[5, 5], padding=2, groups=64, data_format=NCHW)
        (depthwise_dilated): Conv2D(64, 64, kernel_size=[5, 5], padding=6, dilation=[3, 3], groups=64, data_format=NCHW)
      )
      (proj_2): Conv2D(64, 48, kernel_size=[1, 1], data_format=NCHW)
      (pixel_norm): LayerNorm(normalized_shape=[48], epsilon=1e-05)
    )
    (18): VAB(
      (proj_1): Conv2D(48, 64, kernel_size=[1, 1], data_format=NCHW)
      (activation): GELU(approximate=False)
      (atten_branch): Attention(
        (pointwise): Conv2D(64, 64, kernel_size=[1, 1], data_format=NCHW)
        (depthwise): Conv2D(64, 64, kernel_size=[5, 5], padding=2, groups=64, data_format=NCHW)
        (depthwise_dilated): Conv2D(64, 64, kernel_size=[5, 5], padding=6, dilation=[3, 3], groups=64, data_format=NCHW)
      )
      (proj_2): Conv2D(64, 48, kernel_size=[1, 1], data_format=NCHW)
      (pixel_norm): LayerNorm(normalized_shape=[48], epsilon=1e-05)
    )
    (19): VAB(
      (proj_1): Conv2D(48, 64, kernel_size=[1, 1], data_format=NCHW)
      (activation): GELU(approximate=False)
      (atten_branch): Attention(
        (pointwise): Conv2D(64, 64, kernel_size=[1, 1], data_format=NCHW)
        (depthwise): Conv2D(64, 64, kernel_size=[5, 5], padding=2, groups=64, data_format=NCHW)
        (depthwise_dilated): Conv2D(64, 64, kernel_size=[5, 5], padding=6, dilation=[3, 3], groups=64, data_format=NCHW)
      )
      (proj_2): Conv2D(64, 48, kernel_size=[1, 1], data_format=NCHW)
      (pixel_norm): LayerNorm(normalized_shape=[48], epsilon=1e-05)
    )
  )
  (conv_body): Conv2D(48, 48, kernel_size=[3, 3], padding=1, data_format=NCHW)
  (upsampler): Sequential(
    (0): Conv2D(48, 56, kernel_size=[3, 3], padding=1, data_format=NCHW)
    (1): LeakyReLU(negative_slope=0.1)
    (2): Conv2D(56, 12, kernel_size=[3, 3], padding=1, data_format=NCHW)
    (3): PixelShuffle(upscale_factor=2)
  )
)
24-05-19 00:05:06.164 - INFO: Loading model for G [/home/data/disk3/zl/code/paddle/VapSR_paddle/trans_weights/trans_varsp.pdparams] ...
24-05-19 00:05:06.209 - INFO: Model [SRModel] is created.
24-05-19 00:05:06.210 - INFO: 
Testing [set5]...
24-05-19 00:05:10.289 - INFO: baby                 - PSNR: 21.476221 dB; SSIM: 0.935956; PSNR_Y: 25.759888 dB; SSIM_Y: 0.944356.
24-05-19 00:05:11.008 - INFO: bird                 - PSNR: 15.409388 dB; SSIM: 0.733743; PSNR_Y: 23.509032 dB; SSIM_Y: 0.690988.
24-05-19 00:05:11.680 - INFO: butterfly            - PSNR: 17.679454 dB; SSIM: 0.708227; PSNR_Y: 25.552956 dB; SSIM_Y: 0.712130.
24-05-19 00:05:12.382 - INFO: head                 - PSNR: 17.390749 dB; SSIM: 0.717004; PSNR_Y: 20.676868 dB; SSIM_Y: 0.725764.
24-05-19 00:05:12.868 - INFO: woman                - PSNR: 19.033879 dB; SSIM: 0.850280; PSNR_Y: 24.004117 dB; SSIM_Y: 0.860387.
24-05-19 00:05:12.903 - INFO: ----Average PSNR/SSIM results for set5----
	PSNR: 18.197938 dB

24-05-19 00:05:12.904 - INFO: ----Y channel, average PSNR/SSIM----
	PSNR_Y: 23.900572 dB; SSIM_Y: 0.786725

24-05-19 00:05:12.904 - INFO: 
Testing [class3]...
24-05-19 00:05:14.501 - INFO: baboon               - PSNR: 20.316161 dB; SSIM: 0.807716; PSNR_Y: 26.064696 dB; SSIM_Y: 0.827049.
24-05-19 00:05:16.765 - INFO: barbara              - PSNR: 24.097675 dB; SSIM: 0.959936; PSNR_Y: 29.570438 dB; SSIM_Y: 0.951472.
24-05-19 00:05:17.519 - INFO: coastguard           - PSNR: 18.889849 dB; SSIM: 0.886206; PSNR_Y: 22.515211 dB; SSIM_Y: 0.901926.
24-05-19 00:05:18.047 - INFO: comic                - PSNR: 20.788865 dB; SSIM: 0.839063; PSNR_Y: 26.264894 dB; SSIM_Y: 0.806152.
24-05-19 00:05:18.691 - INFO: face                 - PSNR: 17.455007 dB; SSIM: 0.716261; PSNR_Y: 20.764008 dB; SSIM_Y: 0.725396.
24-05-19 00:05:19.951 - INFO: flowers              - PSNR: 18.605345 dB; SSIM: 0.824315; PSNR_Y: 25.418494 dB; SSIM_Y: 0.777851.
24-05-19 00:05:20.695 - INFO: foreman              - PSNR: 36.943698 dB; SSIM: 0.997035; PSNR_Y: 46.507503 dB; SSIM_Y: 0.997796.
24-05-19 00:05:22.531 - INFO: lenna                - PSNR: 29.790373 dB; SSIM: 0.974516; PSNR_Y: 30.981922 dB; SSIM_Y: 0.946190.
24-05-19 00:05:25.053 - INFO: monarch              - PSNR: 24.055237 dB; SSIM: 0.926366; PSNR_Y: 31.676413 dB; SSIM_Y: 0.929478.
24-05-19 00:05:26.884 - INFO: pepper               - PSNR: 16.039292 dB; SSIM: 0.896004; PSNR_Y: 19.351575 dB; SSIM_Y: 0.880810.
24-05-19 00:05:28.997 - INFO: ppt3                 - PSNR: 14.189264 dB; SSIM: 0.844937; PSNR_Y: 16.424643 dB; SSIM_Y: 0.835469.
24-05-19 00:05:30.435 - INFO: zebra                - PSNR: 13.289567 dB; SSIM: 0.753987; PSNR_Y: 17.580291 dB; SSIM_Y: 0.788054.
24-05-19 00:05:30.506 - INFO: ----Average PSNR/SSIM results for class3----
	PSNR: 21.205028 dB

24-05-19 00:05:30.506 - INFO: ----Y channel, average PSNR/SSIM----
	PSNR_Y: 26.093341 dB; SSIM_Y: 0.863970

